syntax = "proto3";
option go_package = "/gen";

import "google/protobuf/any.proto";

enum CommandType {
  CreateStore = 0;
  Put = 1;
  Get = 2;
  DeleteStore = 3;
  SqlDML = 4;
  SqlDDL = 5;
}

enum StoreType {
  Memory = 0;
  Sqlite = 1;
}

message VoteRequest {
  string Id = 1;
  int64 Term = 2;
  string CandidateName = 3;
  int64 LastLogIndex = 4;
  int64 LastLogTerm = 5;
}

message VoteReply {
  string Id = 1;
  bool VoteGranted = 2;
  string CandidateName = 3;
  int64 Term = 4;
}


message LogEntry {
  int64 Term = 1;
  int64 Index = 2;
  google.protobuf.Any Command = 3;
  string Id = 4;
  CommandType CmdType = 5;
}

message AppendEntryRequest {
  string Id = 1;
  int64 Term = 2;
  Peer Leader = 3;
  int64 PrevLogIndex = 4;
  int64 PrevLogTerm = 5;
  repeated LogEntry Entries = 6;
  int64 LeaderCommit = 7;
  int64 NextIndex = 8;
}

message AppendEntryReply {
  string Id = 1;
  int64 Term = 2;
  bool Success = 3;
  int64 ConflictIndex = 4;
  int64 ConflictTerm = 5;
}

message Peer {
  string name = 1;
  string address = 2;
  int32  port = 3;
}

message NewPeerRequest {
  string Id = 1;
  Peer NewPeer = 2;
}

message NewPeerReply {
  string Id = 1;
}

message BootStrapRequest {
  string Id = 1;
}

message BootStrapReply {
  string Id = 1;
}

message RemovePeerRequest {
  string Id = 1;
  Peer peer = 2;
}

message RemovePeerReply {
  string Id = 1;
}

message StatusRequest {
  string Id = 1;
}

message StatusReply {
  string Id = 1;
  Peer server = 2;
  string Status = 3;
  bool isLeader = 4;
}

message ClusterStatusRequest {
  string Id = 1;
}

message ClusterStatusReply {
  string Id = 1;
  repeated StatusReply PeerStatus = 2;
}

message StoreCreateRequest {
  string Id = 1;
  string name = 2;
  StoreType type = 3;
}

message StoreCreateReply {
  string Id = 1;
  string error = 2;
}

message CommandRequest {
  string Id = 1;
  bytes Args = 2;
  CommandType CmdType = 3;
}

message CommandReply {
  string Id = 1;
}

message ListStoreRequest {

}

message ListStoreReply {
  repeated string name = 1;
}

message PutRequest {
  string Id = 1;
  string StoreName = 2;
  string Key = 3;
  string Value = 4;
}

message PutReply {
  string Id = 1;
  string error = 2;
}

message GetRequest {
  string Id = 1;
  string StoreName = 2;
  string Key = 3;
}

message GetReply {
  string Id = 1;
  string value = 2;
}

message StoreDeleteRequest {
  string Id = 1;
  string StoreName = 2;
}

message StoreDeleteReply {
  string Id = 1;
  string Error = 2;
}

message DDLQueryRequest {
  string Id = 1;
  string StoreName = 2;
  string SqlQuery = 3;
}

message DDLQueryReply {
  string Id = 1;
  string Error = 2;
  int64  rowsAffected = 3;
}


service YadosService {
  rpc RequestVotes(VoteRequest) returns (VoteReply) {}
  rpc AppendEntries(AppendEntryRequest) returns (AppendEntryReply) {}
  rpc AddMember(NewPeerRequest) returns (NewPeerReply) {}
  rpc RemovePeer(RemovePeerRequest) returns(RemovePeerReply) {}
  rpc PeerStatus(StatusRequest) returns (StatusReply) {}
  rpc ClusterStatus(ClusterStatusRequest) returns (ClusterStatusReply) {}
  rpc CreateStore(StoreCreateRequest) returns (StoreCreateReply) {}
  rpc ListStores(ListStoreRequest) returns (ListStoreReply) {}
  rpc Put(PutRequest) returns (PutReply) {}
  rpc Get(GetRequest) returns(GetReply) {}
  rpc DeleteStore(StoreDeleteRequest) returns (StoreDeleteReply) {}
  rpc ExecuteDDLSQLQuery(DDLQueryRequest) returns (DDLQueryReply) {}
}
